import org.gradle.api.tasks.Optional

apply plugin: 'jdepend'

def configDir = new File(rootDir, 'config')
ext.jdependConfigDir = "$configDir/jdepend"

jdepend {
  toolVersion = '2.9.1'
  ignoreFailures = true
}

tasks.withType(JDepend) {
  reports {
    text.enabled = false
    xml.enabled = true
  }
}

afterEvaluate {
  plugins.withType(JDependPlugin) {
    sourceSets.each { sourceSet ->
      createReportTask(sourceSet, 'html', 'jdepend.xsl')
      createReportTask(sourceSet, 'dot', 'jdepend2dot.xsl')
    }
  }
}

def createReportTask(SourceSet sourceSet, String fileExtension, String xslFileName) {
  String reportDir = "$reporting.baseDir/jdepend"
  String capitalizedSourceSetName = sourceSet.name.capitalize()
  String capitalizedFileExtension = fileExtension.capitalize()
  String taskName = "jdepend${capitalizedSourceSetName}${capitalizedFileExtension}Report"
  XsltReport reportTask = tasks.create(taskName, XsltReport)

  reportTask.with {
    description = "Generates a JDepend $capitalizedFileExtension report for ${sourceSet.name} classes."
    dependsOn tasks."jdepend${capitalizedSourceSetName}"
    inputFile = new File(reportDir, "${sourceSet.name}.xml")
    xslStyleFile = new File(jdependConfigDir, xslFileName)
    outputFile = new File(reportDir, "jdepend_${sourceSet.name}.$fileExtension")
  }

  check.dependsOn reportTask
}

class XsltReport extends DefaultTask {
  @InputFile File inputFile
  @InputFile File xslStyleFile
  @Input
  @Optional Map<String, String> params = [:]
  @OutputFile File outputFile

  XsltReport() {
    onlyIf {
      inputFile.exists()
    }
  }

  @TaskAction
  void start() {
    ant.xslt(in: inputFile, style: xslStyleFile, out: outputFile) {
      params.each { key, value ->
        ant.param(name: key, expression: value)
      }
    }
  }
}
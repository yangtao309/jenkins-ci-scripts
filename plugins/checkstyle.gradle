import org.gradle.api.tasks.Optional

apply plugin: 'checkstyle'
def configDir = new File(rootDir, 'config')
ext.checkstyleConfigDir = "$configDir/checkstyle"

checkstyle {
  toolVersion = '7.1.1'
  configFile = new File(checkstyleConfigDir, 'google_checks.xml')
  ignoreFailures = true
  showViolations = false
}

afterEvaluate {
  plugins.withType(CheckstylePlugin) {
    sourceSets.each { sourceSet ->
      String capitalizedSourceSetName = sourceSet.name.capitalize()
      String reportTaskName = "checkstyle${capitalizedSourceSetName}Report"
      String reportDir = "$reporting.baseDir/checkstyle"
      XsltReport reportTask = tasks.create(reportTaskName, XsltReport)

      reportTask.with {
        description = "Generates a Checkstyle HTML report for ${sourceSet.name} classes."
        dependsOn tasks."checkstyle${capitalizedSourceSetName}"
        inputFile = new File(reportDir, "${sourceSet.name}.xml")
        xslStyleFile = new File(checkstyleConfigDir, 'checkstyle-noframes.xsl')
        outputFile = new File(reportDir, "checkstyle_${sourceSet.name}.html")
      }

      check.dependsOn reportTaskName
    }
  }
}

class XsltReport extends DefaultTask {
  @InputFile File inputFile
  @InputFile File xslStyleFile
  @Input
  @Optional Map<String, String> params = [:]
  @OutputFile File outputFile

  XsltReport() {
    onlyIf {
      inputFile.exists()
    }
  }

  @TaskAction
  void start() {
    ant.xslt(in: inputFile, style: xslStyleFile, out: outputFile) {
      params.each { key, value ->
        ant.param(name: key, expression: value)
      }
    }
  }
}
